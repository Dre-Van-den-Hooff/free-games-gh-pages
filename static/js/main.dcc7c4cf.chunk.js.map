{"version":3,"sources":["components/ThemeSelector.jsx","api/index.js","api/user.js","contexts/AuthProvider.jsx","components/Login.jsx","components/SignUp.jsx","components/Settings.jsx","hooks/useWindowDimensions.jsx","components/Navbar.jsx","api/favourites.js","components/GameCard.jsx","api/games.js","contexts/GamesProvider.jsx","components/SortButton.jsx","components/SearchButton.jsx","components/Home.jsx","components/Favourites.jsx","components/Account.jsx","components/AddGame.jsx","components/NotFound.jsx","components/PrivateRoute.jsx","App.js","reportWebVitals.js","theme.js","index.js"],"names":["ThemeSelector","background","useColorMode","colorMode","toggleColorMode","label","aria-label","icon","onClick","axios","axiosRoot","create","baseURL","process","login","a","email","password","post","data","register","username","updateUser","put","AuthContext","createContext","JWT_KEY","config","token_key","useAuth","useContext","useSession","token","user","ready","isAuthed","Boolean","AuthProvider","children","useState","localStorage","getItem","setToken","setUser","setReady","useCallback","UserApi","setItem","console","error","logout","useEffect","defaults","headers","api","removeItem","value","useMemo","Provider","Login","loginBackground","useColorModeValue","inputBackground","disabled","setDisabled","setEmail","setPassword","useForm","handleSubmit","errors","formState","history","useHistory","toast","useToast","onSubmit","formData","title","description","status","duration","isClosable","replace","handleChange","e","input","initialScale","in","height","align","justify","className","id","isRequired","htmlFor","data-cy","placeholder","variant","type","required","onChange","target","mb","textColor","message","as","RouteLink","to","colorScheme","_hover","textDecoration","color","isDisabled","width","SignUp","setUsername","confirmPassword","setConfirmPassword","confirmpassword","UserAPI","minLength","Settings","handleLogout","display","alignItems","ml","leftIcon","mr","getWindowDimensions","window","innerWidth","innerHeight","Navbar","navBackground","open","setOpen","useDisclosure","isOpen","onToggle","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","animateOpacity","getAllGames","get","deleteGameById","delete","postGame","game","GameCard","thumbnail","genre","releaseDate","developer","cardBackground","localStorageUsername","handleClick","release_date","FavouritesAPI","src","getGameBySearchTerm","term","GamesContext","UpdateGamesContext","useGames","useGamesUpdate","GamesProvider","games","setGames","refreshGames","sorted","initialLoad","GamesAPI","SortButton","filterBackground","byTitleAZ","sort","b","localeCompare","byTitleZA","byGenre","byDeveloper","byDateOldest","byDateNewest","rightIcon","SearchButton","isSearching","setIsSearching","searchTerm","setSearchTerm","Home","textAlign","map","Favourites","favourites","setFavourites","getFavourites","log","length","fontSize","item","Account","localStorageEmail","profileBackground","avatarBackground","loading","setLoading","setTimeout","bg","borderRadius","w","h","direction","mt","size","name","offsetY","isLoading","AddGame","formBackground","justifyContent","p","loadingText","NotFound","pathname","useLocation","PrivateRoute","rest","from","App","theme","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","extendTheme","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcc7c4cf.chunk.js","sourcesContent":["import React from \"react\";\nimport { IconButton, Tooltip, useColorMode } from \"@chakra-ui/react\";\nimport { BiSun } from \"react-icons/bi\";\nimport { FiMoon } from \"react-icons/fi\";\n\nexport default function ThemeSelector({ background }) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <>\n      <Tooltip label=\"change theme\">\n        <IconButton\n          aria-label=\"change colormode\"\n          icon={colorMode === \"light\" ? <FiMoon /> : <BiSun />}\n          onClick={toggleColorMode}\n          background={background}\n        />\n      </Tooltip>\n    </>\n  );\n}\n","import axiosRoot from \"axios\";\nimport config from \"../config.json\";\n\nexport const axios = axiosRoot.create({\n  baseURL: process.env.REACT_APP_BACKEND_BASE_URL || config.base_url,\n});\n\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers[\"Authorization\"];\n  }\n};\n","import { axios } from \"./index\";\n\nexport const getUserById = async id => {\n  const { data } = await axios.get(`user/${id}`);\n  return data;\n};\n\nexport const login = async ({ email, password }) => {\n  const { data } = await axios.post(\"user/login\", { email, password });\n  return data;\n};\n\nexport const register = async ({ username, email, password }) => {\n  const { data } = await axios.post(\"user/register\", { username, email, password });\n  return data;\n};\n\nexport const deleteUserById = async id => {\n  await axios.delete(`user/${id}`);\n};\n\nexport const updateUser = async ({ email, username }) => {\n  const { data } = await axios.put(\"user/update\", { email, username });\n  return data;\n};\n","import { createContext, useState, useMemo, useCallback, useEffect, useContext } from \"react\";\nimport * as UserApi from \"../api/user\";\nimport * as api from \"../api/index\";\nimport config from \"../config.json\";\n\nconst AuthContext = createContext();\nconst JWT_KEY = config.token_key;\n\nconst useAuth = () => useContext(AuthContext);\n\nexport const useSession = () => {\n  const { token, user, ready } = useAuth();\n  return { token, user, ready, isAuthed: Boolean(token) };\n};\n\nexport const useLogin = () => {\n  const { login } = useAuth();\n  return login;\n};\n\nexport const useLogout = () => {\n  const { logout } = useAuth();\n  return logout;\n};\n\nexport function AuthProvider({ children }) {\n  const [token, setToken] = useState(localStorage.getItem(JWT_KEY));\n  const [user, setUser] = useState(null);\n  const [ready, setReady] = useState(false);\n\n  const login = useCallback(async (email, password) => {\n    try {\n      const { token, user } = await UserApi.login(email, password);\n      setToken(token);\n      setUser(user);\n      if (user) {\n        localStorage.setItem(\"username\", user.username);\n        localStorage.setItem(\"email\", user.email);\n      }\n      if (user) return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUser(null);\n  }, []);\n\n  useEffect(() => {\n    setReady(Boolean(token));\n    api.setAuthToken(token);\n    if (token) localStorage.setItem(JWT_KEY, token);\n    else localStorage.removeItem(JWT_KEY);\n  }, [token, user]);\n\n  const value = useMemo(\n    () => ({\n      token,\n      user,\n      ready,\n      login,\n      logout,\n    }),\n    [token, user, login, logout, ready]\n  );\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Box, Text, FormLabel, Button, Flex, Heading, Input, useColorModeValue, Link, FormControl, ScaleFade, useToast } from \"@chakra-ui/react\";\nimport { Link as RouteLink } from \"react-router-dom\";\nimport ThemeSelector from \"./ThemeSelector\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLogin } from \"../contexts/AuthProvider\";\n\nexport default function Login() {\n  const loginBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  const inputBackground = useColorModeValue(\"gray.200\", \"gray.600\");\n\n  const [disabled, setDisabled] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const history = useHistory();\n  const login = useLogin();\n  const toast = useToast();\n\n  const onSubmit = useCallback(\n    async formData => {\n      const success = await login(formData);\n      if (success) {\n        toast({\n          title: \"Success\",\n          description: \"login success\",\n          status: \"success\",\n          duration: 3000,\n          isClosable: true,\n        });\n        history.replace(\"/home\");\n      } else {\n        toast({\n          title: \"Login failed\",\n          description: \"Password or email is incorrect\",\n          status: \"error\",\n          duration: 4000,\n          isClosable: true,\n        });\n      }\n    },\n    [history, login, toast]\n  );\n\n  const handleChange = useCallback(\n    (e, input) => {\n      if (input === \"email\") setEmail(e);\n      if (input === \"password\") setPassword(e);\n      if (email && password) setDisabled(false);\n    },\n    [email, password]\n  );\n\n  useEffect(() => {\n    if (!email || !password) setDisabled(true);\n  }, [setDisabled, password, email]);\n\n  return (\n    <ScaleFade initialScale={0.9} in={true}>\n      <Flex height=\"100vh\" align=\"center\" justify=\"center\">\n        <Flex className=\"login\" background={loginBackground}>\n          <Box className=\"toggles\">\n            <ThemeSelector background={inputBackground} />\n          </Box>\n          <Heading className=\"heading\">Log in</Heading>\n          <FormControl id=\"email\" isRequired>\n            <FormLabel htmlFor=\"email\">Email address</FormLabel>\n            <Input\n              data-cy=\"email_input\"\n              className=\"input input-email\"\n              placeholder=\"example@email.com\"\n              variant=\"filled\"\n              type=\"email\"\n              background={inputBackground}\n              {...register(\"email\", { required: \"email is required\" })}\n              onChange={e => handleChange(e.target.value, \"email\")}\n            />\n            {errors.email && (\n              <Text mb={2} textColor=\"red\">\n                {errors.email.message}\n              </Text>\n            )}\n          </FormControl>\n          <FormControl id=\"password\" isRequired>\n            <FormLabel htmlFor=\"password\">Password</FormLabel>\n            <Input\n              data-cy=\"password_input\"\n              className=\"input input-password\"\n              placeholder=\"Password\"\n              variant=\"filled\"\n              type=\"password\"\n              background={inputBackground}\n              {...register(\"password\", { required: \"password is required\" })}\n              onChange={e => handleChange(e.target.value, \"password\")}\n            />\n            {errors.password && (\n              <Text mb={2} textColor=\"red\">\n                {errors.password.message}\n              </Text>\n            )}\n          </FormControl>\n          <Link as={RouteLink} to=\"/signup\" colorScheme=\"teal\" mb={3} align=\"center\" _hover={{ textDecoration: \"none\", color: \"teal.500\" }}>\n            No account? Sign up here!\n          </Link>\n          <Button data-cy=\"login_button\" mb=\"1em\" colorScheme=\"teal\" isDisabled={disabled} width=\"100%\" onClick={handleSubmit(onSubmit)}>\n            Log in\n          </Button>\n        </Flex>\n      </Flex>\n    </ScaleFade>\n  );\n}\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  Box,\n  FormLabel,\n  Button,\n  Flex,\n  Text,\n  Tooltip,\n  Heading,\n  Input,\n  useColorModeValue,\n  FormControl,\n  IconButton,\n  Link,\n  ScaleFade,\n  useToast,\n} from \"@chakra-ui/react\";\nimport ThemeSelector from \"./ThemeSelector\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { BsArrowReturnLeft } from \"react-icons/bs\";\nimport { Link as RouteLink } from \"react-router-dom\";\nimport * as UserAPI from \"../api/user\";\n\nexport default function SignUp() {\n  const loginBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  const inputBackground = useColorModeValue(\"gray.200\", \"gray.600\");\n\n  const [disabled, setDisabled] = useState(true);\n\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const history = useHistory();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const toast = useToast();\n\n  const onSubmit = useCallback(\n    async formData => {\n      if (formData.password === formData.confirmpassword) {\n        const succes = await UserAPI.register(formData);\n        if (succes) {\n          toast({\n            title: \"Success\",\n            description: \"Successfully registered\",\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          });\n          history.replace(\"/\");\n        } else {\n          toast({\n            title: \"Register failed\",\n            description: \"Email already registered\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          });\n        }\n      } else {\n        toast({\n          title: \"Register failed\",\n          description: \"Password does not match confirmed password\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n    },\n    [toast, history]\n  );\n\n  const handleChange = useCallback(\n    (e, input) => {\n      if (input === \"email\") setEmail(e);\n      if (input === \"password\") setPassword(e);\n      if (input === \"confirmPassword\") setConfirmPassword(e);\n      if (input === \"username\") setUsername(e);\n\n      if (email && password && confirmPassword && username) setDisabled(false);\n    },\n    [confirmPassword, password, username, email]\n  );\n\n  useEffect(() => {\n    if (!email || !password || !confirmPassword || !username) setDisabled(true);\n  }, [setDisabled, password, email, confirmPassword, username]);\n\n  return (\n    <ScaleFade initialScale={0.9} in={true}>\n      <Flex height=\"100vh\" align=\"center\" justify=\"center\">\n        <Flex className=\"login\" background={loginBackground}>\n          <Box className=\"toggles\">\n            <Tooltip label=\"back\">\n              <Box className=\"back\">\n                <Link as={RouteLink} to={\"/\"}>\n                  <IconButton icon={<BsArrowReturnLeft />} background={inputBackground} />\n                </Link>\n              </Box>\n            </Tooltip>\n            <Box className=\"theme\">\n              <ThemeSelector background={inputBackground} />\n            </Box>\n          </Box>\n\n          <Heading className=\"heading\">Sign Up</Heading>\n          <FormControl id=\"username\" isRequired>\n            <FormLabel htmlFor=\"username\">Username</FormLabel>\n            <Input\n              className=\"input\"\n              placeholder=\"username\"\n              variant=\"filled\"\n              type=\"text\"\n              background={inputBackground}\n              {...register(\"username\", { required: \"Username is required\" })}\n              onChange={e => handleChange(e.target.value, \"username\")}\n            />\n            {errors.username && (\n              <Text mb={2} textColor=\"red\">\n                {errors.username.message}\n              </Text>\n            )}\n          </FormControl>\n          <FormControl id=\"email\" isRequired>\n            <FormLabel htmlFor=\"email\">Email address</FormLabel>\n            <Input\n              className=\"input\"\n              placeholder=\"example@email.com\"\n              variant=\"filled\"\n              type=\"email\"\n              background={inputBackground}\n              {...register(\"email\", { required: \"Email is required\" })}\n              onChange={e => handleChange(e.target.value, \"email\")}\n            />\n            {errors.email && (\n              <Text mb={2} textColor=\"red\">\n                {errors.email.message}\n              </Text>\n            )}\n          </FormControl>\n          <FormControl id=\"password\" isRequired>\n            <FormLabel htmlFor=\"password\">Password</FormLabel>\n            <Input\n              className=\"input\"\n              placeholder=\"Password\"\n              variant=\"filled\"\n              type=\"password\"\n              background={inputBackground}\n              {...register(\"password\", { minLength: { value: 8, message: \"Password must be at least 8 characters\" } })}\n              onChange={e => handleChange(e.target.value, \"password\")}\n            />\n            {errors.password && (\n              <Text mb={2} textColor=\"red\">\n                {errors.password.message}\n              </Text>\n            )}\n          </FormControl>\n          <FormControl id=\"confirmpassword\" isRequired>\n            <FormLabel htmlFor=\"password\">Confirm password</FormLabel>\n            <Input\n              className=\"input\"\n              placeholder=\"Confirm password\"\n              variant=\"filled\"\n              type=\"password\"\n              background={inputBackground}\n              {...register(\"confirmpassword\", { required: \"confirm password is required\" })}\n              onChange={e => handleChange(e.target.value, \"confirmPassword\")}\n            />\n            {errors.confirmpassword && (\n              <Text mb={2} textColor=\"red\">\n                {errors.confirmpassword.message}\n              </Text>\n            )}\n          </FormControl>\n          <Button className=\"login-button\" colorScheme=\"teal\" isDisabled={disabled} onClick={handleSubmit(onSubmit)}>\n            Sign up\n          </Button>\n        </Flex>\n      </Flex>\n    </ScaleFade>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport {\n  Box,\n  Button,\n  IconButton,\n  Tooltip,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverArrow,\n  PopoverCloseButton,\n} from \"@chakra-ui/react\";\nimport { FiSettings } from \"react-icons/fi\";\nimport { BiLogOut } from \"react-icons/bi\";\nimport { useLogout } from \"../contexts/AuthProvider\";\nimport { useHistory } from \"react-router-dom\";\nimport ThemeSelector from \"./ThemeSelector\";\n\nexport default function Settings() {\n  const logout = useLogout();\n  const history = useHistory();\n\n  const handleLogout = useCallback(() => {\n    logout();\n    history.replace(\"/\");\n  }, [logout, history]);\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\n        <Popover>\n          <PopoverTrigger>\n            <Button leftIcon={<FiSettings />}>Settings</Button>\n          </PopoverTrigger>\n          <PopoverContent mr={5}>\n            <PopoverArrow />\n            <PopoverCloseButton />\n            <PopoverHeader>Settings</PopoverHeader>\n            <PopoverBody>\n              <Box>\n                <ThemeSelector />\n                <Tooltip label=\"log out\">\n                  <IconButton icon={<BiLogOut />} ml={2} onClick={handleLogout} />\n                </Tooltip>\n              </Box>\n            </PopoverBody>\n          </PopoverContent>\n        </Popover>\n      </Box>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { useState } from \"react\";\nimport { Link as RouteLink } from \"react-router-dom\";\nimport { ListItem, UnorderedList, Link, Box, useColorModeValue, IconButton, Collapse, useDisclosure } from \"@chakra-ui/react\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nimport Settings from \"./Settings\";\nimport useWindowDimensions from \"../hooks/useWindowDimensions\";\n\nexport default function Navbar() {\n  const navBackground = useColorModeValue(\"gray.200\", \"gray.700\");\n  const [open, setOpen] = useState(true);\n  let { isOpen, onToggle } = useDisclosure();\n  const { width } = useWindowDimensions();\n\n  if (width > 600) isOpen = true;\n\n  const handleClick = () => {\n    onToggle();\n    setOpen(!open);\n  };\n\n  return (\n    <>\n      <Box className=\"hamburger-menu\">\n        <IconButton className=\"hamburger-menu-icon\" icon={open ? <FiMenu /> : <MdOutlineCancel />} onClick={handleClick} background={navBackground} />\n      </Box>\n      <Collapse in={isOpen} animateOpacity>\n        <Box className=\"nav-container\" background={navBackground}>\n          <UnorderedList>\n            <ListItem>\n              <Link as={RouteLink} to=\"/home\">\n                Home\n              </Link>\n            </ListItem>\n            <ListItem data-cy=\"to_favourites\">\n              <Link as={RouteLink} to=\"/favourites\">\n                Favourites\n              </Link>\n            </ListItem>\n            <ListItem data-cy=\"to_account\">\n              <Link as={RouteLink} to=\"/account\">\n                Account\n              </Link>\n            </ListItem>\n            <ListItem>\n              <Link as={RouteLink} to=\"/addgame\">\n                Add game\n              </Link>\n            </ListItem>\n            <Settings />\n          </UnorderedList>\n        </Box>\n      </Collapse>\n    </>\n  );\n}\n","import { axios } from \"./index\";\n\nexport const getAllGames = async () => {\n  const { data } = await axios.get(\"favourites\");\n  return data;\n};\n\nexport const deleteGameById = async id => {\n  await axios.delete(`favourites/${id}`);\n};\n\nexport const postGame = async game => {\n  await axios.post(\"favourites\", game);\n};\n","import React, { useCallback } from \"react\";\nimport { Box, Image, Text, IconButton, Tooltip, useColorModeValue, useToast } from \"@chakra-ui/react\";\nimport { AiOutlinePlusSquare } from \"react-icons/ai\";\nimport * as FavouritesAPI from \"../api/favourites\";\nimport { useSession } from \"../contexts/AuthProvider\";\n\nexport default function GameCard({ title, thumbnail, genre, releaseDate, developer }) {\n  const cardBackground = useColorModeValue(\"teal.300\", \"teal.600\");\n  const toast = useToast();\n  const { isAuthed } = useSession();\n\n  const localStorageUsername = localStorage.getItem(\"username\");\n\n  const handleClick = useCallback(async () => {\n    const game = {\n      title: title,\n      thumbnail: thumbnail,\n      genre: genre,\n      release_date: releaseDate,\n      developer: developer,\n      username: localStorageUsername,\n    };\n\n    try {\n      await FavouritesAPI.postGame(game);\n      toast({\n        title: \"Game added to favourites\",\n        description: \"The game was succesfully added to favourites.\",\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error(error);\n      toast({\n        title: \"Game was not added to favourites\",\n        description: \"There was an error adding the game to favourites.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  }, [title, thumbnail, genre, releaseDate, developer, toast, localStorageUsername]);\n\n  return (\n    <>\n      <Box className=\"cards-wrapper\">\n        <Box className=\"cards\" background={cardBackground}>\n          <Box className=\"cards-info\">\n            <Image src={thumbnail} />\n            <Box className=\"info-container\">\n              <Text data-cy=\"game_title\"> Title: {title} </Text>\n              <Text data-cy=\"game_genre\"> Genre: {genre} </Text>\n              <Text data-cy=\"game_date\"> Release date: {releaseDate} </Text>\n              <Text data-cy=\"game_developer\"> Developer: {developer} </Text>\n            </Box>\n          </Box>\n          {isAuthed && (\n            <Box className=\"wishlist-button\">\n              <Tooltip label=\"add to favourites\">\n                <IconButton data-cy=\"add_to_favourites_button\" icon={<AiOutlinePlusSquare />} onClick={handleClick} />\n              </Tooltip>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import { axios } from \"./index\";\n\nexport const getAllGames = async () => {\n  const { data } = await axios.get(\"games\");\n  return data;\n};\n\nexport const postGame = async formData => {\n  await axios.post(\"games\", formData);\n};\n\nexport const getGameBySearchTerm = async term => {\n  const { data } = await axios.get(`games/query/${term}`);\n  return data;\n};\n","import React, { useCallback, useMemo, createContext, useState, useEffect, useContext } from \"react\";\nimport { useToast } from \"@chakra-ui/react\";\nimport * as GamesAPI from \"../api/games\";\n\nconst GamesContext = createContext();\nconst UpdateGamesContext = createContext();\n\nexport const useGames = () => useContext(GamesContext);\nexport const useGamesUpdate = () => useContext(UpdateGamesContext);\n\nexport function GamesProvider({ children }) {\n  const [games, setGames] = useState([]);\n  const toast = useToast();\n\n  const refreshGames = useCallback(sorted => {\n    setGames([...sorted]);\n  }, []);\n\n  const initialLoad = useCallback(async () => {\n    try {\n      const data = await GamesAPI.getAllGames();\n      setGames(data);\n    } catch (error) {\n      console.error(error);\n      toast({\n        title: \"Error\",\n        description: \"Error fetching list of games\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    initialLoad();\n  }, [initialLoad]);\n\n  const value = useMemo(() => games, [games]);\n  return (\n    <GamesContext.Provider value={value}>\n      <UpdateGamesContext.Provider value={refreshGames}>{children}</UpdateGamesContext.Provider>\n    </GamesContext.Provider>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { useGames, useGamesUpdate } from \"../contexts/GamesProvider\";\nimport { Text, Box, Link, Collapse, Button, Divider, useDisclosure, useColorModeValue } from \"@chakra-ui/react\";\nimport { BiSort } from \"react-icons/bi\";\n\nexport default function SortButton() {\n  const { isOpen, onToggle } = useDisclosure();\n  const filterBackground = useColorModeValue(\"teal.300\", \"teal.600\");\n  const games = useGames();\n  const refreshGames = useGamesUpdate();\n\n  const byTitleAZ = useCallback(() => {\n    const sorted = games.sort((a, b) => a.title.localeCompare(b.title));\n    refreshGames(sorted);\n  }, [games, refreshGames]);\n\n  const byTitleZA = useCallback(() => {\n    const sorted = games.sort((a, b) => b.title.localeCompare(a.title));\n    refreshGames(sorted);\n  }, [games, refreshGames]);\n\n  const byGenre = useCallback(() => {\n    const sorted = games.sort((a, b) => a.genre.localeCompare(b.genre));\n    refreshGames(sorted);\n  }, [games, refreshGames]);\n\n  const byDeveloper = useCallback(() => {\n    const sorted = games.sort((a, b) => a.developer.localeCompare(b.developer));\n    refreshGames(sorted);\n  }, [games, refreshGames]);\n\n  const byDateOldest = useCallback(() => {\n    const sorted = games.sort((a, b) => a.release_date.localeCompare(b.release_date));\n    refreshGames(sorted);\n  }, [games, refreshGames]);\n\n  const byDateNewest = useCallback(() => {\n    const sorted = games.sort((a, b) => b.release_date.localeCompare(a.release_date));\n    refreshGames(sorted);\n  }, [games, refreshGames]);\n\n  return (\n    <>\n      <Box mb={5}>\n        <Button onClick={onToggle} rightIcon={<BiSort />} variant=\"solid\" colorScheme=\"teal\" ml={5}>\n          Sort by\n        </Button>\n        <Collapse in={isOpen} animateOpacity>\n          <Box className=\"filter-box\" background={filterBackground}>\n            <Text>\n              <Link onClick={byTitleAZ}>Title A-Z</Link>\n            </Text>\n            <Divider />\n            <Text>\n              <Link onClick={byTitleZA}>Title Z-A</Link>\n            </Text>\n            <Divider />\n            <Text>\n              <Link onClick={byGenre}>Genre</Link>\n            </Text>\n            <Divider />\n            <Text>\n              <Link onClick={byDeveloper}>Developer</Link>\n            </Text>\n            <Divider />\n            <Text>\n              <Link onClick={byDateOldest}>Release date Oldest</Link>\n            </Text>\n            <Divider />\n            <Text>\n              <Link onClick={byDateNewest}>Release date Newest</Link>\n            </Text>\n          </Box>\n        </Collapse>\n      </Box>\n    </>\n  );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { Box, Button, Input, useColorModeValue, ScaleFade } from \"@chakra-ui/react\";\nimport { useGamesUpdate } from \"../contexts/GamesProvider\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport * as GamesAPI from \"../api/games\";\n\nexport default function SearchButton() {\n  const inputBackground = useColorModeValue(\"gray.200\", \"teal.800\");\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const refreshGames = useGamesUpdate();\n\n  const handleClick = useCallback(() => {\n    setIsSearching(!isSearching);\n  }, [isSearching]);\n\n  const handleChange = async e => {\n    setSearchTerm(e);\n    try {\n      const data = await GamesAPI.getGameBySearchTerm(searchTerm);\n      refreshGames(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <Box mb={5}>\n        {isSearching ? (\n          <ScaleFade initialScale={0.9} in={true}>\n            <Box mr={5} className=\"search-input\">\n              <Input type=\"text\" variant=\"outline\" placeholder=\"Search\" background={inputBackground} onChange={e => handleChange(e.target.value)} />\n            </Box>\n          </ScaleFade>\n        ) : (\n          <Button onClick={handleClick} rightIcon={<BiSearchAlt2 />} variant=\"solid\" colorScheme=\"teal\" mr={5}>\n            Search\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport GameCard from \"./GameCard\";\nimport SortButton from \"./SortButton\";\nimport SearchButton from \"./SearchButton\";\nimport { useGames } from \"../contexts/GamesProvider\";\nimport { Heading, Box, Flex, ScaleFade } from \"@chakra-ui/react\";\n\nexport default function Home() {\n  const games = useGames();\n\n  return (\n    <>\n      <Navbar />\n      <Heading ml={5} mb={5}>\n        Home\n      </Heading>\n      <Flex justify=\"space-between\">\n        <SortButton />\n        <SearchButton />\n      </Flex>\n      <ScaleFade initialScale={0.9} in={true}>\n        <Box textAlign=\"center\">\n          {games.map(game => (\n            <GameCard\n              key={game.id}\n              title={game.title}\n              thumbnail={game.thumbnail}\n              genre={game.genre}\n              releaseDate={game.release_date}\n              developer={game.developer}\n            />\n          ))}\n        </Box>\n      </ScaleFade>\n    </>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Heading, Box, Flex, Image, Link, Text, IconButton, Tooltip, ScaleFade, useColorModeValue, useToast } from \"@chakra-ui/react\";\nimport { Link as RouteLink } from \"react-router-dom\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport * as FavouritesAPI from \"../api/favourites\";\n\nexport default function Favourites() {\n  const cardBackground = useColorModeValue(\"teal.300\", \"teal.600\");\n  const [favourites, setFavourites] = useState([]);\n  const toast = useToast();\n\n  const getFavourites = useCallback(async () => {\n    try {\n      const data = await FavouritesAPI.getAllGames();\n      setFavourites(data);\n    } catch (error) {\n      console.log(error);\n      toast({\n        title: \"Error\",\n        description: \"Error while fetching favourites.\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [toast]);\n\n  const handleClick = useCallback(\n    async id => {\n      try {\n        await FavouritesAPI.deleteGameById(id);\n        getFavourites();\n        toast({\n          title: \"Game removed from favourites\",\n          description: \"The game was succesfully removed from the list.\",\n          status: \"success\",\n          duration: 3000,\n          isClosable: true,\n        });\n      } catch (error) {\n        console.error(error);\n        toast({\n          title: \"Game not removed\",\n          description: \"The game was not removed from favourites list.\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n    },\n    [toast, getFavourites]\n  );\n\n  useEffect(() => {\n    getFavourites();\n  }, [getFavourites]);\n\n  return (\n    <>\n      <Navbar />\n      <Heading ml={5}>Favourites</Heading>\n      {favourites.length === 0 && (\n        <Flex justify=\"center\" align=\"center\" height=\"60vh\">\n          <Text fontSize=\"4xl\">\n            The Favorites list is empty...{\" \"}\n            <Link as={RouteLink} to=\"/home\" _hover={{ textDecoration: \"none\", color: \"teal.500\" }}>\n              Add some games!\n            </Link>\n          </Text>\n        </Flex>\n      )}\n      <ScaleFade initialScale={0.9} in={true}>\n        {favourites.map(item => (\n          <Flex className=\"wishlist-container\" key={item.id}>\n            <Box className=\"wishlist-items\" background={cardBackground}>\n              <Flex className=\"wishlist-info\">\n                <Image src={item.thumbnail} />\n                <Box className=\"info-container\">\n                  <Text data-cy=\"favourites_title\" className=\"info title\">\n                    {item.title}\n                  </Text>\n                  <Text className=\"info\"> Genre: {item.genre} </Text>\n                  <Text className=\"info\"> Release date: {item.release_date} </Text>\n                  <Text className=\"info\"> Developer: {item.developer} </Text>\n                  <Text className=\"info\"> Added by: {item.username} </Text>\n                </Box>\n              </Flex>\n              <Box className=\"delete-item\">\n                {localStorage.getItem(\"username\") === item.username && (\n                  <Tooltip label=\"remove from favourites\">\n                    <IconButton data-cy=\"favourites_remove_button\" icon={<RiDeleteBin5Line />} onClick={() => handleClick(item.id)} />\n                  </Tooltip>\n                )}\n              </Box>\n            </Box>\n          </Flex>\n        ))}\n      </ScaleFade>\n    </>\n  );\n}\n","import React, { useState, useCallback } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Heading, Text, Flex, Box, Button, Input, Avatar, useColorModeValue, SlideFade, ScaleFade, useDisclosure, useToast } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport * as UserApi from \"../api/user\";\n\nexport default function Account() {\n  const localStorageUsername = localStorage.getItem(\"username\");\n  const localStorageEmail = localStorage.getItem(\"email\");\n\n  const profileBackground = useColorModeValue(\"teal.300\", \"teal.600\");\n  const avatarBackground = useColorModeValue(\"teal.400\", \"teal.700\");\n  const inputBackground = useColorModeValue(\"gray.200\", \"teal.800\");\n\n  const { isOpen, onToggle } = useDisclosure();\n  const [username, setUsername] = useState(localStorageUsername);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { register, handleSubmit } = useForm();\n\n  const handleClick = useCallback(() => {\n    onToggle();\n  }, [onToggle]);\n\n  const onSubmit = useCallback(\n    async formData => {\n      setLoading(true);\n      formData.email = localStorageEmail;\n      const { username } = await UserApi.updateUser(formData);\n      if (username) {\n        setTimeout(() => {\n          setUsername(username);\n          toast({\n            title: \"Success\",\n            description: \"Updated username successfully\",\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          });\n          setLoading(false);\n          localStorage.setItem(\"username\", username);\n        }, 2000);\n      } else {\n        toast({\n          title: \"Error\",\n          description: \"Error trying to update username\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        });\n        setLoading(false);\n      }\n    },\n    [toast, localStorageEmail]\n  );\n\n  return (\n    <>\n      <Navbar />\n      <Heading as=\"h1\" ml={5} mb={5}>\n        Account\n      </Heading>\n      <ScaleFade initialScale={0.9} in={true}>\n        <Flex className=\"account-container\" justify=\"center\">\n          <Flex className=\"account-wrapper\" bg={profileBackground} borderRadius=\"12px\" w=\"60%\" h=\"450px\" direction=\"column\">\n            <Box mr=\"auto\" ml=\"auto\" mt={5}>\n              <Heading data-cy=\"welcome_heading\" as=\"h2\" size=\"lg\">\n                Welcome {username}\n              </Heading>\n            </Box>\n            <Box ml={5}>\n              <Avatar name={username} bg={avatarBackground} size=\"lg\" mb={4} />\n              <Heading as=\"h3\" size=\"md\">\n                Your information:\n              </Heading>\n              <Box mb={5}>\n                <Text>Username: {username}</Text>\n                <Text>Connected email address: {localStorageEmail}</Text>\n              </Box>\n              <Button data-cy=\"change_button\" colorScheme=\"teal\" onClick={handleClick}>\n                Change username\n              </Button>\n              <SlideFade in={isOpen} offsetY=\"20px\">\n                <Flex direction=\"column\">\n                  <Input\n                    className=\"account-input\"\n                    data-cy=\"username_input\"\n                    mt={5}\n                    mb={5}\n                    w=\"40%\"\n                    type=\"text\"\n                    placeholder=\"enter new username\"\n                    bg={inputBackground}\n                    {...register(\"username\")}\n                  />\n\n                  <Button\n                    className=\"account-button\"\n                    data-cy=\"confirm_button\"\n                    w=\"20%\"\n                    colorScheme=\"teal\"\n                    isLoading={loading}\n                    onClick={handleSubmit(onSubmit)}\n                  >\n                    Confirm\n                  </Button>\n                </Flex>\n              </SlideFade>\n            </Box>\n          </Flex>\n        </Flex>\n      </ScaleFade>\n    </>\n  );\n}\n","import React, { useState, useCallback } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { useForm } from \"react-hook-form\";\nimport { Text, Heading, FormControl, FormLabel, Select, Input, Button, Flex, useColorModeValue, useToast, ScaleFade } from \"@chakra-ui/react\";\nimport * as GamesAPI from \"../api/games\";\n\nexport default function AddGame() {\n  const formBackground = useColorModeValue(\"teal.200\", \"gray.700\");\n  const inputBackground = useColorModeValue(\"gray.200\", \"gray.600\");\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const toast = useToast();\n\n  const onSubmit = useCallback(\n    async formData => {\n      formData.thumbnail = \"\";\n      setLoading(true);\n      try {\n        await GamesAPI.postGame(formData);\n        setTimeout(() => {\n          toast({\n            title: \"Game added\",\n            description: \"The game was succesfully added to our database.\",\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          });\n          setLoading(false);\n        }, 2000);\n      } catch (error) {\n        console.error(error);\n        toast({\n          title: \"Submission failed\",\n          description: \"Make sure all required fields are filled in.\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        });\n        setLoading(false);\n      }\n    },\n    [toast]\n  );\n\n  return (\n    <>\n      <Navbar />\n      <Heading ml={5} mb={5}>\n        Add game to database\n      </Heading>\n      <ScaleFade initialScale={0.9} in={true}>\n        <Flex className=\"form-wrapper\" justifyContent=\"center\" alignItems=\"center\">\n          <Flex className=\"form\" w=\"50%\" background={formBackground} borderRadius=\"12px\" p=\"1em\">\n            <FormControl as=\"fieldset\">\n              <FormControl id=\"title\" isRequired>\n                <FormLabel htmlFor=\"title\">Title</FormLabel>\n                <Input\n                  data-cy=\"title_input\"\n                  className=\"input\"\n                  type=\"text\"\n                  variant=\"filled\"\n                  placeholder=\"title\"\n                  background={inputBackground}\n                  {...register(\"title\", { required: \"Title is required\" })}\n                />\n                {errors.title && (\n                  <Text mb={2} textColor=\"red\">\n                    {errors.title.message}\n                  </Text>\n                )}\n              </FormControl>\n              <FormControl id=\"title\">\n                <FormLabel htmlFor=\"genre\">Genre</FormLabel>\n                <Select data-cy=\"genre_input\" placeholder=\"select genre\" mb=\"1em\" background={inputBackground} {...register(\"genre\")}>\n                  <option value=\"MMORPG\">MMORPG</option>\n                  <option value=\"MMO\">MMO</option>\n                  <option value=\"Shooter\">Shooter</option>\n                  <option value=\"Survival game\">Survival</option>\n                  <option value=\"Card Game\">Card game</option>\n                  <option value=\"Social\">Social</option>\n                  <option value=\"MOBA\">MOBA</option>\n                  <option value=\"Strategy\">Strategy</option>\n                  <option value=\"Fighting\">Fighting</option>\n                  <option value=\"Racing\">Racing</option>\n                  <option value=\"Sports\">Sports</option>\n                  <option value=\"Fantasy\">Fantasy</option>\n                  <option value=\"ARPG\">ARPG</option>\n                </Select>\n              </FormControl>\n              <FormControl id=\"releasedate\">\n                <FormLabel htmlFor=\"releasedate\">Release date</FormLabel>\n                <Input data-cy=\"date_input\" className=\"input\" type=\"date\" background={inputBackground} {...register(\"release_date\")} />\n              </FormControl>\n              <FormControl id=\"developer\">\n                <FormLabel htmlFor=\"developer\">Developer</FormLabel>\n                <Input\n                  data-cy=\"developer_input\"\n                  className=\"input\"\n                  type=\"text\"\n                  variant=\"filled\"\n                  placeholder=\"developer\"\n                  background={inputBackground}\n                  {...register(\"developer\")}\n                />\n              </FormControl>\n              <Flex justify=\"flex-end\">\n                <Button data-cy=\"submit_game\" colorScheme=\"teal\" isLoading={loading} loadingText=\"Submitting...\" onClick={handleSubmit(onSubmit)}>\n                  Submit\n                </Button>\n              </Flex>\n            </FormControl>\n          </Flex>\n        </Flex>\n      </ScaleFade>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Flex, Box, Heading, Code } from \"@chakra-ui/react\";\nimport { useLocation } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\n\nexport default function NotFound() {\n  const { pathname } = useLocation();\n  return (\n    <>\n      <Navbar />\n      <Flex align=\"center\" height=\"60vh\" justify=\"center\">\n        <Box>\n          <Heading>404: Page not found {\":(\"}</Heading>\n          <Code mt={5} colorScheme=\"red\" fontSize=\"1.5em\">\n            Page with url {pathname} was not found\n          </Code>\n        </Box>\n      </Flex>\n    </>\n  );\n}\n","import { Route, Redirect, useLocation } from \"react-router-dom\";\nimport { useSession } from \"../contexts/AuthProvider\";\n\nexport default function PrivateRoute({ children, ...rest }) {\n  const { isAuthed } = useSession();\n  const { pathname } = useLocation();\n\n  return <Route {...rest}>{isAuthed ? children : <Redirect from={pathname} to=\"/\" />}</Route>;\n}\n","import React from \"react\";\nimport \"./css/App.scss\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Home from \"./components/Home\";\nimport Favourites from \"./components/Favourites\";\nimport Account from \"./components/Account\";\nimport AddGame from \"./components/AddGame\";\nimport NotFound from \"./components/NotFound\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { GamesProvider } from \"./contexts/GamesProvider\";\nimport { AuthProvider } from \"./contexts/AuthProvider\";\nimport { ThemeProvider, theme } from \"@chakra-ui/react/\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ThemeProvider theme={theme}>\n        <GamesProvider>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/signup\" component={SignUp} />\n              <Route path=\"/home\" component={Home} />\n              <PrivateRoute path=\"/favourites\" component={Favourites} />\n              <PrivateRoute path=\"/account\" component={Account} />\n              <Route path=\"/addgame\" component={AddGame} />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </Router>\n        </GamesProvider>\n      </ThemeProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst config = {\n  initialColorMode: \"system\",\n  useSystemColorMode: true,\n};\n\nconst theme = extendTheme({ config });\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport theme from \"./theme.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}